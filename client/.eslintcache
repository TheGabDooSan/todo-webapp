[{"G:\\workspace\\WEB\\gab-web\\client\\src\\index.js":"1","G:\\workspace\\WEB\\gab-web\\client\\src\\App.js":"2","G:\\workspace\\WEB\\gab-web\\client\\src\\routes\\index.js":"3","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\Todos.js":"4","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\components\\ListTodos.js":"5","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\components\\InputTodo.js":"6","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\components\\EditTodo.js":"7","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Index\\Main.js":"8"},{"size":168,"mtime":1610311582000,"results":"9","hashOfConfig":"10"},{"size":256,"mtime":1610381326000,"results":"11","hashOfConfig":"10"},{"size":590,"mtime":1610383248000,"results":"12","hashOfConfig":"10"},{"size":338,"mtime":1610382004000,"results":"13","hashOfConfig":"10"},{"size":2037,"mtime":1610381416000,"results":"14","hashOfConfig":"10"},{"size":968,"mtime":1610381408000,"results":"15","hashOfConfig":"10"},{"size":1847,"mtime":1610381398000,"results":"16","hashOfConfig":"10"},{"size":205,"mtime":1610383018000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1w7desb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"G:\\workspace\\WEB\\gab-web\\client\\src\\index.js",[],["40","41"],"G:\\workspace\\WEB\\gab-web\\client\\src\\App.js",["42"],"import React, { Fragment } from 'react'\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","G:\\workspace\\WEB\\gab-web\\client\\src\\routes\\index.js",["43"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Index from '../pages/Index/Main';\r\nimport Todos from '../pages/Todos/Todos';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={Index} />\r\n            <Route exact path='/todos' component={Todos} />\r\n            <Route exact path='/discord' component={() => { \r\n                window.location.href = 'https://discord.gg/3E5ce9WY2a'; \r\n                return null;\r\n            }} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\Todos.js",[],"G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\components\\ListTodos.js",["44"],"import React, { Fragment, useEffect, useState } from 'react';\r\n\r\nimport EditTodo from './EditTodo';\r\n\r\nconst ListTodos = () => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const deleteTodo = async (id) => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:199/todos/${id}`, {\r\n                method: 'DELETE'\r\n            });\r\n\r\n            setTodos(todos.filter(todo => todo.t_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getTodos = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:199/todos');\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*\r\n                    <tr>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                        <td>john@example.com</td>\r\n                    </tr>\r\n                    */}\r\n                    {todos.map(todo => (\r\n                        <tr key={todo.t_id}>\r\n                            <td>{todo.description}</td>\r\n                            <td>\r\n                                <EditTodo todo={todo} />\r\n                            </td>\r\n                            <td>\r\n                                <button onClick={() => deleteTodo(todo.t_id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListTodos;","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\components\\InputTodo.js",["45"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst InputTodo = () => {\r\n\r\n    const [description, setDescription] = useState('');\r\n\r\n    const onSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description };\r\n            const response = await fetch('http://localhost:199/todos', {\r\n                method: 'POST',\r\n                headers: { 'Content-type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            window.location = '/todos';\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Todo List</h1>\r\n            <form onSubmit={onSubmitForm}>\r\n                <input type='text' value={description} onChange={e => setDescription(e.target.value)} />\r\n                <button>Add</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputTodo;","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Todos\\components\\EditTodo.js",["46"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ todo }) => {\r\n  const [description, setDescription] = useState(todo.description);\r\n\r\n  //edit description function\r\n\r\n  const updateDescription = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(\r\n        `http://localhost:199/todos/${todo.t_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n\r\n      window.location = \"/todos\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button type=\"button\" data-toggle=\"modal\" data-target={`#id${todo.t_id}`}>\r\n        Edit\r\n      </button>\r\n\r\n      {/* \r\n        id = id10\r\n      */}\r\n      <div\r\n        class=\"modal\"\r\n        id={`id${todo.t_id}`}\r\n        onClick={() => setDescription(todo.description)}\r\n      >\r\n        <div>\r\n          <div>\r\n            <div>\r\n              <h4>Edit Todo</h4>\r\n              <button type=\"button\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)}>\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n              <input type=\"text\" value={description} onChange={e => setDescription(e.target.value)}/>\r\n            </div>\r\n\r\n            <div>\r\n              <button type=\"button\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>\r\n                Edit\r\n              </button>\r\n              <button type=\"button\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)} >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditTodo;","G:\\workspace\\WEB\\gab-web\\client\\src\\pages\\Index\\Main.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":2,"column":25,"nodeType":"53","messageId":"54","endLine":2,"endColumn":33},{"ruleId":"51","severity":1,"message":"56","line":11,"column":19,"nodeType":"53","messageId":"54","endLine":11,"endColumn":29},{"ruleId":"51","severity":1,"message":"57","line":11,"column":19,"nodeType":"53","messageId":"54","endLine":11,"endColumn":27},{"ruleId":"51","severity":1,"message":"57","line":12,"column":13,"nodeType":"53","messageId":"54","endLine":12,"endColumn":21},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'deleteTodo' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]